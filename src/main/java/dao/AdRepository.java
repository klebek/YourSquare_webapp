package dao;

import java.sql.Connection;
import java.sql.SQLException;

import dao.mappers.AdMapper;
import dao.uow.IUnitOfWork;
import model.*;

import java.util.List;

public class AdRepository extends RepositoryBase<Ad> implements IAdRepository {


	public AdRepository(Connection connection,
						AdMapper mapper,
						IRepository<User> userRepo,IUnitOfWork uow) {
		super(connection, mapper,uow);
		mapper.setUserRepo(userRepo);
	}
	
	@Override
	protected String tableName() {
		// TODO Auto-generated method stub
		return "ad";
	}
	@Override
	protected String createTableSql() {
		// TODO Auto-generated method stub
		return "CREATE TABLE ad("
					+ "id INT GENERATED BY DEFAULT AS IDENTITY,"
					+ "user_id INT,"
					+ "title VARCHAR(50),"
					+ "content VARCHAR(50),"
					+ "fee INT"
				    + ")";
	}

	@Override
	protected String insertSql() {
		// TODO Auto-generated method stub
		return "INSERT INTO ad(user_id, title, content, fee) VALUES(?,?,?,?)";
	}

	@Override
	protected String updateSql() {
		// TODO Auto-generated method stub
		return "UPDATE ad set user_id = ?, title=?, content=?, fee=? WHERE id=?";
	}

	@Override
	protected String selectByIdSql() {
		// TODO Auto-generated method stub
		return "SELECT * FROM ad WHERE id=?";
	}
	@Override
	protected String selectAllSql() {
		// TODO Auto-generated method stub
		return "SELECT * FROM ad";
	}

	@Override
	protected String deleteSql() {
		// TODO Auto-generated method stub
		return "DELETE FROM ad WHERE id = ?";
	}


	@Override
	protected void setupInsert(Ad entity) throws SQLException {
		insert.setInt(1, entity.getUserId());
		insert.setString(2, entity.getTitle());
		insert.setString(3, entity.getContent());
		insert.setInt(4, entity.getFee());
	}

	@Override
	protected void setupUpdate(Ad entity) throws SQLException {
		insert.setInt(1, entity.getUserId());
		update.setString(2,entity.getTitle());
		update.setString(3,entity.getContent());
		update.setInt(4,entity.getFee());
	}

	public List<Ad> byUser(User user) {
		// TODO Auto-generated method stub
		return null;
	}

}
